/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InventoryPanel.java
 *
 * Created on 15-Apr-2011, 1:05:52 PM
 */

package ui;

import account.AccountManagement;
import account.AlreadyManagerException;
import account.Employee;
import account.NotManagerException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import search.Search;


/**
 *
 * @author cwang01
 */
public class EmployeePanel extends javax.swing.JPanel {

    private ArrayList<Employee> employeeInfoObj;
    private Vector<Vector<String>> et_data; //used for data from database
    private Vector<String> et_header; //used to store data header
    private DefaultTableModel table;

    /** Creates new form InventoryPanel */
    public EmployeePanel() {
        MakeTable();
        initComponents();
        refreshTable();
    }

        private void MakeTable(){

      et_data = new Vector<Vector <String>>();
      for(int i = 0; i < 1; i++){
          Vector temp = new Vector <String>();
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          et_data.add(temp);
      }

      et_header = new Vector<String>();
      et_header.add("EmployeeID");
      et_header.add("Name"); //Empid
      et_header.add("Position"); // employee name

    }

    private void refreshTable(){
         table = (DefaultTableModel)empTable.getModel();
         while (table.getRowCount()>0)
            table.removeRow(0);
        try {
            employeeInfoObj = Search.getAllEmployees();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        et_data = new Vector<Vector<String>>();
        
        Vector<String> row;
        for(Employee emp : employeeInfoObj){
           row = new Vector<String>();

           String ID = "" + emp.getEmployeeID();
           row.add(ID);
           String name = "" + emp.getFname() + " " + emp.getLname();
           row.add(name);
           String position = "" + emp.getPosition();
           row.add(position);
           table.addRow(row);
        }
        //create header for the table
        et_header = new Vector<String>();
        et_header.add("EmployeeId");
        et_header.add("Name");
        et_header.add("Position");

        table.fireTableStructureChanged();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empScrollPane = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable()
        ;
        empDemoteButton = new javax.swing.JButton();
        empAddButton = new javax.swing.JButton();
        empEditButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        empTable.setModel(new javax.swing.table.DefaultTableModel(
            et_data, et_header
        ));
        empScrollPane.setViewportView(empTable);

        empDemoteButton.setText("Promote/Demote");
        empDemoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empDemoteButtonActionPerformed(evt);
            }
        });

        empAddButton.setText("Add");
        empAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empAddButtonActionPerformed(evt);
            }
        });

        empEditButton.setText("Edit");
        empEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empEditButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(empScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empDemoteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empEditButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empAddButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(empScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(empAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(empEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(empDemoteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void empEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empEditButtonActionPerformed
        // TODO add your handling code here:
        int rowNumber = empTable.getSelectedRow();
        String valueID = "" + table.getValueAt(rowNumber, 0);
        new EmployeeInfoDialog(valueID,0,false).setVisible(true);
}//GEN-LAST:event_empEditButtonActionPerformed

    private void empAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empAddButtonActionPerformed


            new EmployeeInfoDialog(1, false).setVisible(true);

    }//GEN-LAST:event_empAddButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void empDemoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empDemoteButtonActionPerformed
        try {
            // TODO add your handling code here:
            int rownumber = empTable.getSelectedRow();
            AccountManagement manage = new AccountManagement();

            String valueID = "" + table.getValueAt(rownumber, 0);

            String valuePos = "" + table.getValueAt(rownumber,2);

            if (valuePos.equals("Manager")) {
                manage.demoteManager(Integer.parseInt(valueID));
            }else{
                manage.promoteEmployee(Integer.parseInt(valueID));
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotManagerException ex) {
                    Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (AlreadyManagerException ex) {
                    Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        refreshTable();
    }//GEN-LAST:event_empDemoteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton empAddButton;
    private javax.swing.JButton empDemoteButton;
    private javax.swing.JButton empEditButton;
    private javax.swing.JScrollPane empScrollPane;
    private javax.swing.JTable empTable;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

}
