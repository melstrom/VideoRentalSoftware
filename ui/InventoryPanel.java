/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EmployeePanel.java
 *
 * Created on 15-Apr-2011, 1:06:18 PM
 */

package ui;

import inventory.GeneralMovie;
import inventory.MovieManagement;
import inventory.MovieNotFoundException;
import inventory.RentalMovie;
import inventory.RentalMovieManagement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import search.Search;

/**
 *
 * @author cwang01
 */
public class InventoryPanel extends javax.swing.JPanel {

    /** Creates new form EmployeePanel */
    private Vector <Vector <String>> tableContent;
    private Vector <Vector <String>> tableContent2;
    private Vector <String> header;
    private UiController localUIC;
    private DefaultTableModel table;
    private DefaultTableModel table2;
    private ArrayList<inventory.GeneralMovie> result;
    private ArrayList<RentalMovie> Rentalresult;
    public InventoryPanel(ui.UiController UIC) {
        localUIC = UIC;
        MakeTable();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        private void MakeTable(){

      tableContent = new Vector<Vector <String>>();
      tableContent2 = new Vector<Vector <String>>();
      for(int i = 0; i < 1; i++){
          System.out.println("i = " + i);
          Vector temp = new Vector <String>();
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          tableContent.add(temp);
          tableContent2.add(temp);
      }

      header = new Vector<String>();
      header.add("Title"); //Empid
      header.add("Release Date"); // employee name
      header.add("Director"); // employee position
      header.add("Actor(s)"); // employee department
      header.add("Rating"); // employee department
      header.add("Format");
      header.add("Availability");

    }

    private void UpdateTable() {
      String searchItem = inCIdField2.getText();
      String selectedItem = (String)jComboBox4.getSelectedItem();
      System.out.println("SearchItem: " + searchItem);
      tableContent = new Vector<Vector <String>>();

        table = (DefaultTableModel)jTable5.getModel();
        while (table.getRowCount()>0)
            table.removeRow(0);

        try {
            System.out.println("testestetsetset");
            result = Search.searchMovies(searchItem, selectedItem);

            System.out.println(result.size());
            for (int i = 0; i < result.size();i++) //inventory.GeneralMovie movie : result)
            {
                inventory.GeneralMovie singleMovie = (inventory.GeneralMovie)result.get(i);
                System.out.println("result Size: " + singleMovie.getTitle());

                Vector <String> row = new Vector<String>();
                row.add(singleMovie.getTitle());
                row.add("" + singleMovie.getReleaseDate().get(java.util.Calendar.YEAR));
                row.add("" + singleMovie.getDirector());
                System.out.println("Get Director: " + singleMovie.getDirector());
                String actors = "";
                for (String actor : singleMovie.getActors())
                {
                    actors += actor;
                    actors += ", ";
                }
                actors = actors.trim().substring(0, actors.length() -2);
                row.add("" + actors);
                System.out.println("Get actors: " + actors);
                row.add("" + singleMovie.getRating());
                System.out.println("Get Rating: " + singleMovie.getRating());
                row.add(singleMovie.getFormat());
                if(RentalMovieManagement.getAvailableCopies(singleMovie)> 0)
                    row.add("# of Available "+RentalMovieManagement.getAvailableCopies(singleMovie));
                else if(RentalMovieManagement.getAvailableCopies(singleMovie)== 0)
                    row.add("Rented");
                else if(RentalMovieManagement.getAvailableCopies(singleMovie) < 0)
                    row.add("Not in Store");
                table.addRow(row);
            }

        } catch (SQLException ex) {
            Logger.getLogger(CustomerFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }catch (MovieNotFoundException ex) {
            searchField1.setText("Movie Not Found");
        } catch (Exception ex) {System.out.print(ex.getMessage());ex.printStackTrace();}

        table.fireTableStructureChanged();
    }


    private void UpdateRentalTable() {
      String searchItem = inCIdField2.getText();
      String selectedItem = (String)jComboBox4.getSelectedItem();
      System.out.println("SearchItem: " + searchItem);
      tableContent2 = new Vector<Vector <String>>();

        table2 = (DefaultTableModel)jTable2.getModel();
        while (table2.getRowCount()>0)
            table2.removeRow(0);

        try {
            System.out.println("testestetsetset");
            Rentalresult = Search.searchRentals(searchItem, selectedItem);
            for (int i = 0; i < Rentalresult.size();i++) //inventory.GeneralMovie movie : Rentalresult)
            {
                inventory.GeneralMovie singleMovie = (inventory.GeneralMovie)Rentalresult.get(i);
                System.out.println("Rentalresult Size: " + singleMovie.getTitle());

                Vector <String> row = new Vector<String>();
                row.add(singleMovie.getTitle());
                row.add("" + singleMovie.getReleaseDate().get(java.util.Calendar.YEAR));
                row.add("" + singleMovie.getDirector());
                System.out.println("Get Director: " + singleMovie.getDirector());
                String actors = "";
                for (String actor : singleMovie.getActors())
                {
                    actors += actor;
                    actors += ", ";
                }
                actors = actors.trim().substring(0, actors.length() -2);
                row.add("" + actors);
                System.out.println("Get actors: " + actors);
                row.add("" + singleMovie.getRating());
                System.out.println("Get Rating: " + singleMovie.getRating());
                row.add(singleMovie.getFormat());
                if(RentalMovieManagement.getAvailableCopies(singleMovie)> 0)
                    row.add("# of Available "+RentalMovieManagement.getAvailableCopies(singleMovie));
                else if(RentalMovieManagement.getAvailableCopies(singleMovie)== 0)
                    row.add("Rented");
                else if(RentalMovieManagement.getAvailableCopies(singleMovie) < 0)
                    row.add("Not in Store");
                table2.addRow(row);
            }

        } catch (SQLException ex) {
            Logger.getLogger(CustomerFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CustomerFrame.class.getName()).log(Level.SEVERE, null, ex);
        }catch (MovieNotFoundException ex) {
            searchField1.setText("Movie Not Found");
        } catch (Exception ex) {System.out.print(ex.getMessage());ex.printStackTrace();}
        table2.fireTableStructureChanged();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        addNewTitleButton = new javax.swing.JButton();
        inCOkButton2 = new javax.swing.JButton();
        EditNewButton = new javax.swing.JButton();
        EditRentalButton = new javax.swing.JButton();
        inCIdField2 = new javax.swing.JTextField();
        inCIdLabel2 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jComboBox4 = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        rentalNewAddButton = new javax.swing.JButton();
        searchField2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchField1 = new javax.swing.JLabel();

        addNewTitleButton.setText("Add New Video");
        addNewTitleButton.setActionCommand("Add new Rental");
        addNewTitleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewTitleButtonActionPerformed(evt);
            }
        });

        inCOkButton2.setText("OK");

        EditNewButton.setText("Edit Selected");
        EditNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditNewButtonActionPerformed(evt);
            }
        });

        EditRentalButton.setText("Edit Selected");
        EditRentalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditRentalButtonActionPerformed(evt);
            }
        });

        inCIdLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        inCIdLabel2.setText("General Movie:");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            tableContent,header
        ));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, EditNewButton, org.jdesktop.beansbinding.ObjectProperty.create(), jTable5, org.jdesktop.beansbinding.BeanProperty.create("rowSelectionAllowed"));
        bindingGroup.addBinding(binding);

        jScrollPane6.setViewportView(jTable5);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "SKU" }));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            tableContent2,header
        ));
        jScrollPane2.setViewportView(jTable2);

        rentalNewAddButton.setText("Add New Rental");
        rentalNewAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentalNewAddButtonActionPerformed(evt);
            }
        });

        searchField2.setFont(new java.awt.Font("Tahoma", 1, 14));
        searchField2.setForeground(new java.awt.Color(255, 0, 0));
        searchField2.setText("Movie Not Found");

        jLabel1.setText("Rental Movie");

        jLabel2.setText("General Inventory");

        searchField1.setFont(new java.awt.Font("Tahoma", 1, 14));
        searchField1.setForeground(new java.awt.Color(255, 0, 0));
        searchField1.setText("Movie Not Found");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(inCIdLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inCIdField2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inCOkButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(rentalNewAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditRentalButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 677, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(186, 186, 186)
                        .addComponent(addNewTitleButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditNewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(searchField2)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(573, Short.MAX_VALUE)
                    .addComponent(searchField1)
                    .addGap(6, 6, 6)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inCIdLabel2)
                    .addComponent(inCIdField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inCOkButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addNewTitleButton)
                            .addComponent(EditNewButton)
                            .addComponent(searchField2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditRentalButton)
                    .addComponent(rentalNewAddButton))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(searchField1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(488, Short.MAX_VALUE)))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void addNewTitleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewTitleButtonActionPerformed
        new AddNewTitleDialog(localUIC.getCurrentFrame(),false).setVisible(true);
    }//GEN-LAST:event_addNewTitleButtonActionPerformed

    private void EditNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditNewButtonActionPerformed
        int row  = jTable5.getSelectedRow();
        int value = Integer.parseInt("" + table.getValueAt(row, 0));
        inventory.GeneralMovie singleMovie = result.get(value);
        new EditTitleDialog(localUIC.getCurrentFrame(), false, singleMovie).setVisible(true);
    }//GEN-LAST:event_EditNewButtonActionPerformed

    private void EditRentalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditRentalButtonActionPerformed
        // TODO add your handling code here:
        int row  = jTable2.getSelectedRow();
        int value = Integer.parseInt("" + table.getValueAt(row, 0));
        inventory.GeneralMovie singleMovie = Rentalresult.get(value);
        new EditTitleDialog(localUIC.getCurrentFrame(), false, singleMovie).setVisible(true);
    }//GEN-LAST:event_EditRentalButtonActionPerformed

    private void rentalNewAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentalNewAddButtonActionPerformed
        try {
            // TODO add your handling code here:
            MovieManagement copy = new MovieManagement();
            int row = jTable2.getSelectedRow();
            int value = Integer.parseInt("" + table.getValueAt(row, 0));
            inventory.GeneralMovie singleMovie = Rentalresult.get(value);
            copy.addCopy(singleMovie, "rental");



        } catch (SQLException ex) {
            Logger.getLogger(InventoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(InventoryPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
}//GEN-LAST:event_rentalNewAddButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EditNewButton;
    private javax.swing.JButton EditRentalButton;
    private javax.swing.JButton addNewTitleButton;
    private javax.swing.JTextField inCIdField2;
    private javax.swing.JLabel inCIdLabel2;
    private javax.swing.JButton inCOkButton2;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable5;
    private javax.swing.JButton rentalNewAddButton;
    private javax.swing.JLabel searchField1;
    private javax.swing.JLabel searchField2;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
