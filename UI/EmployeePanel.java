/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InventoryPanel.java
 *
 * Created on 15-Apr-2011, 1:05:52 PM
 */

//package ui;

//import account.AccountManagement;
//import account.AlreadyManagerException;
//import account.Employee;
//import account.NotManagerException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
//import search.Search;


/**
 *
 * @author cwang01
 */
public class EmployeePanel extends javax.swing.JPanel {

    //private ArrayList<Employee> employeeInfoObj;
    private Vector<Vector<String>> et_data; //used for data from database
    private Vector<String> et_header; //used to store data header
    private DefaultTableModel table;

    /** Creates new form InventoryPanel */
    public EmployeePanel() {
        MakeTable();
        initComponents();
        refreshTable();
    }

        private void MakeTable(){

      et_data = new Vector<Vector <String>>();
      for(int i = 0; i < 1; i++){
          System.out.println("Kristan i = " + i);
          Vector temp = new Vector <String>();
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          temp.add(" ");
          et_data.add(temp);
      }

      et_header = new Vector<String>();
      et_header.add("EmployeeID");
      et_header.add("Name"); //Empid
      et_header.add("Position"); // employee name

    }

    private void refreshTable(){
/*         table = (DefaultTableModel)empTable.getModel();
         while (table.getRowCount()>0)
             //System.out.println("Delete Row" + table.getRowCount());
            table.removeRow(0);
        try {
            employeeInfoObj = Search.getAllEmployees();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println("size:  " + employeeInfoObj.size());
        et_data = new Vector<Vector<String>>();
        
        Vector<String> row;
        for(Employee emp : employeeInfoObj){
           row = new Vector<String>();

           String ID = "" + emp.getEmployeeID();
           System.out.println("id: " +ID);
           row.add(ID);
           String name = "" + emp.getFname() + " " + emp.getLname();
           row.add(name);
           String position = "" + emp.getPosition();
           row.add(position);
           table.addRow(row);
        }
        //create header for the table
        et_header = new Vector<String>();
        et_header.add("EmployeeId");
        et_header.add("Name");
        et_header.add("Position");

        table.fireTableStructureChanged();
  */
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empScrollPane = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable()
        ;
        jPanel1 = new javax.swing.JPanel();
        empDemoteButton = new javax.swing.JButton();
        empEditButton = new javax.swing.JButton();
        empAddButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        empEditButton1 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(1024, 768));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(1024, 768));

        empTable.setModel(new javax.swing.table.DefaultTableModel(
            et_data, et_header
        ));
        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"0000001", "Peter", "Manager", "Yes", "604-555-5555"},
                {"0000002", "Mary", "Employee", "No", null},
                {"0000003", "Ken", "Employee", "Yes", null}
            },
            new String [] {
                "Employee ID", "Name", "Type", "Is Active?", "Phone Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        empScrollPane.setViewportView(empTable);
        empTable.getColumnModel().getColumn(2).setResizable(false);
        empTable.getColumnModel().getColumn(2).setPreferredWidth(3);
        empTable.getColumnModel().getColumn(3).setResizable(false);
        empTable.getColumnModel().getColumn(3).setPreferredWidth(3);

        empDemoteButton.setText("Remove");
        empDemoteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empDemoteButtonActionPerformed(evt);
            }
        });

        empEditButton.setText("Edit");
        empEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empEditButtonActionPerformed(evt);
            }
        });

        empAddButton.setText("Add");
        empAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empAddButtonActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Display All", "Active Only" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Display Setting");

        empEditButton1.setText("Refresh");
        empEditButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empEditButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(empEditButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empDemoteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empEditButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empAddButton, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(empAddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empDemoteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empEditButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(empEditButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(579, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(empScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 851, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(empScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void empEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empEditButtonActionPerformed
        // TODO add your handling code here:
        int rowNumber = empTable.getSelectedRow();
        String valueID = "" + table.getValueAt(rowNumber, 0);
        new EmployeeInfoDialog(valueID,0,false).setVisible(true);
}//GEN-LAST:event_empEditButtonActionPerformed

    private void empAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empAddButtonActionPerformed


            new EmployeeInfoDialog(1, false).setVisible(true);

    }//GEN-LAST:event_empAddButtonActionPerformed

    private void empDemoteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empDemoteButtonActionPerformed
  //      try {
            // TODO add your handling code here:
            int rownumber = empTable.getSelectedRow();
//            AccountManagement manage = new AccountManagement();
            System.out.println("after getSelectedRow(): "+ rownumber);

            String valueID = "" + table.getValueAt(rownumber, 0);
            System.out.println("after getValueAt: "+ Integer.parseInt(valueID));

            String valuePos = "" + table.getValueAt(rownumber,2);
            System.out.println("after getPosition At: "+valuePos);

            if (valuePos.equals("Manager")) {
//                manage.demoteManager(Integer.parseInt(valueID));
                System.out.println("In = M: " + Integer.parseInt(valueID));
            }else{
//                manage.promoteEmployee(Integer.parseInt(valueID));
                System.out.println("In = E: " + Integer.parseInt(valueID));
            }
  /*
        } catch (SQLException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotManagerException ex) {
                    Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }catch (AlreadyManagerException ex) {
                    Logger.getLogger(EmployeePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        refreshTable();

   */
    }//GEN-LAST:event_empDemoteButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void empEditButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empEditButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_empEditButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton empAddButton;
    private javax.swing.JButton empDemoteButton;
    private javax.swing.JButton empEditButton;
    private javax.swing.JButton empEditButton1;
    private javax.swing.JScrollPane empScrollPane;
    private javax.swing.JTable empTable;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

}
